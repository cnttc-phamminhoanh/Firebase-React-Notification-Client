{"ast":null,"code":"var _jsxFileName = \"/home/mati/Desktop/Fireact-master/client/src/Messaging.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Container from 'react-bootstrap/Container';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { toast } from 'react-toastify';\nimport { onMessageListener } from './firebaseInit';\nexport const Messaging = () => {\n  const [messages, setMessages] = React.useState([]);\n  const [requesting, setRequesting] = React.useState(false);\n  React.useEffect(() => {\n    setRequesting(true); // axios.get('/messages').then((resp) => {\n    //   setMessages(resp.data.messages);\n    //   setRequesting(false);\n    // });\n  }, []);\n  onMessageListener().then(payload => {\n    console.log(payload.data);\n    const {\n      title,\n      body\n    } = payload.data;\n    toast.info(`${title}; ${body}`);\n  }).catch(err => {\n    toast.error(JSON.stringify(err));\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      message: ''\n    },\n    onSubmit: (values, actions) => {// axios\n      //   .post('/messages', values)\n      //   .then((resp) => {\n      //     setMessages(resp.data.messages.concat(messages));\n      //     actions.setSubmitting(false);\n      //     toast.success('Submitted succesfully');\n      //   })\n      //   .catch((err) => {\n      //     console.log(err);\n      //     toast.error('There was an error saving the message');\n      //   });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, prop => {\n    const {\n      handleSubmit,\n      handleChange,\n      isSubmitting\n    } = prop;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(FormControl, {\n      placeholder: \"Enter your name\",\n      onChange: handleChange('name'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"basic-addon1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    }, \"Message\")), /*#__PURE__*/React.createElement(FormControl, {\n      onChange: handleChange('message'),\n      placeholder: \"Enter a message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    })), isSubmitting ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      as: \"span\",\n      size: \"sm\",\n      role: \"status\",\n      animation: \"grow\",\n      \"aria-hidden\": \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }), \"Loading...\") : /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => handleSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"Messages\"), requesting ? /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Loading...\")) : /*#__PURE__*/React.createElement(React.Fragment, null, messages.map((m, index) => {\n    const {\n      name,\n      message\n    } = m;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, name, \": \", message);\n  }))));\n};","map":{"version":3,"sources":["/home/mati/Desktop/Fireact-master/client/src/Messaging.js"],"names":["React","axios","Formik","Button","InputGroup","FormControl","Container","Spinner","toast","onMessageListener","Messaging","messages","setMessages","useState","requesting","setRequesting","useEffect","then","payload","console","log","data","title","body","info","catch","err","error","JSON","stringify","name","message","values","actions","prop","handleSubmit","handleChange","isSubmitting","map","m","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Container from 'react-bootstrap/Container';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport { toast } from 'react-toastify';\n\nimport { onMessageListener } from './firebaseInit';\n\nexport const Messaging = () => {\n  const [ messages, setMessages ] = React.useState([]);\n  const [ requesting, setRequesting ] = React.useState(false);\n\n  React.useEffect(() => {\n    setRequesting(true);\n    // axios.get('/messages').then((resp) => {\n    //   setMessages(resp.data.messages);\n    //   setRequesting(false);\n    // });\n  }, []);\n\n  onMessageListener()\n    .then((payload) => {\n      console.log(payload.data);\n      const { title, body } = payload.data;\n      toast.info(`${title}; ${body}`);\n    })\n    .catch((err) => {\n      toast.error(JSON.stringify(err));\n    });\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{\n          name: '',\n          message: '',\n        }}\n        onSubmit={(values, actions) => {\n          // axios\n          //   .post('/messages', values)\n          //   .then((resp) => {\n          //     setMessages(resp.data.messages.concat(messages));\n          //     actions.setSubmitting(false);\n          //     toast.success('Submitted succesfully');\n          //   })\n          //   .catch((err) => {\n          //     console.log(err);\n          //     toast.error('There was an error saving the message');\n          //   });\n        }}\n      >\n        {(prop) => {\n          const { handleSubmit, handleChange, isSubmitting } = prop;\n          return (\n            <>\n              <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"basic-addon1\">Name</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  placeholder=\"Enter your name\"\n                  onChange={handleChange('name')}\n                />\n              </InputGroup>\n\n              <InputGroup className=\"mb-3\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"basic-addon1\">Message</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  onChange={handleChange('message')}\n                  placeholder=\"Enter a message\"\n                />\n              </InputGroup>\n\n              {isSubmitting ? (\n                <Button variant=\"primary\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    size=\"sm\"\n                    role=\"status\"\n                    animation=\"grow\"\n                    aria-hidden=\"true\"\n                  />\n                  Loading...\n                </Button>\n              ) : (\n                <Button variant=\"primary\" onClick={() => handleSubmit()}>\n                  Submit\n                </Button>\n              )}\n            </>\n          );\n        }}\n      </Formik>\n\n      <div className=\"message-list\">\n        <h3>Messages</h3>\n\n        {requesting ? (\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        ) : (\n          <>\n            {messages.map((m, index) => {\n              const { name, message } = m;\n              return (\n                <div key={index}>\n                  {name}: {message}\n                </div>\n              );\n            })}\n          </>\n        )}\n      </div>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}